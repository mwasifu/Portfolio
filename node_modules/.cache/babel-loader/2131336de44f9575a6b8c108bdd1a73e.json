{"ast":null,"code":"var _jsxFileName = \"/Users/wasif/Documents/GitHub/portfolio/src/components/Speech.jsx\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as speech from \"@tensorflow-models/speech-commands\";\nimport \"./Speech.css\";\nimport { drawBall } from \"./utilities\";\n\nconst Speech = () => {\n  // model and action states\n  const [model, setModel] = useState(null);\n  const [action, setAction] = useState(null);\n  const [labels, setLabels] = useState(null); // Canvas Ref and x,y coordinates and radius (r)\n\n  const canvasRef = useRef(null);\n  const [x, setX] = useState(700);\n  const [y, setY] = useState(400);\n  const [r, setR] = useState(30); //  Recognizer\n\n  const loadModel = async () => {\n    const recognizer = await speech.create(\"BROWSER_FFT\");\n    console.log(\"Model loaded\");\n    await recognizer.ensureModelLoaded();\n    console.log(recognizer.wordLabels());\n    setModel(recognizer);\n    setLabels(recognizer.wordLabels());\n  };\n\n  useEffect(() => {\n    loadModel();\n  }, []);\n\n  function argMax(arr) {\n    return arr.map((x, i) => [x, i]).reduce((r, a) => a[0] > r[0] ? a : r)[1];\n  }\n\n  const pause = async () => {\n    model.stopListening();\n    console.log(\"Stopped recording from inside pause\");\n  };\n\n  const recognizeCommand = async () => {\n    console.log(\"in\");\n    model.listen(result => {\n      console.log(\"Started listening\");\n      console.log(result.scores);\n      setAction(labels[argMax(Object.values(result.scores))]);\n      console.log({\n        action\n      });\n    }, {\n      includeSpectrogram: true,\n      probabilityThreshold: 0.9\n    });\n  };\n\n  useEffect(() => {\n    const updateBall = action === \"up\" ? setY(y - 60) : action === \"down\" ? setY(y + 60) : action === \"right\" ? setX(x + 60) : action === \"left\" ? setX(x - 60) : \"\";\n    canvasRef.current.width = 1200;\n    canvasRef.current.height = 640;\n    const ctx = canvasRef.current.getContext(\"2d\");\n    console.log(x, y, r);\n    drawBall(ctx, x, y, r);\n    setAction('Speak to see some magic');\n  }, [action]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\",\n      zIndex: \"999\",\n      position: \"relative\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: \"white\",\n      backgroundColor: \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      marginBottom: '0',\n      paddingTop: '5%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"Control the ball with your Voice!\")), /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: canvasRef,\n    style: {\n      textAlign: \"center\",\n      zIndex: \"9\",\n      width: \"100%\",\n      height: 720,\n      backgroundColor: \"black\",\n      marginBottom: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      columnGap: \"65%\",\n      textAlign: \"center\",\n      alignItems: \"center\",\n      paddingLeft: \"25%\",\n      paddingRight: \"25%\",\n      paddingTop: \"5%\",\n      paddingBottom: \"2%\",\n      margin: 0,\n      position: \"relative\",\n      zIndex: \"200\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"control\",\n    onClick: recognizeCommand,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, \"Talk\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"control\",\n    style: {\n      backgroundColor: \"red\"\n    },\n    onClick: pause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, \"Stop\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\",\n      padding: \"5%\",\n      color: \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      marginBottom: \"3%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, \"Instructions\"), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      fontWeight: \"400\",\n      marginBottom: \"1%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, \"1. Press \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 75\n    }\n  }, \"Talk\")), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      fontWeight: \"400\",\n      marginBottom: \"1%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, \"2. Make it move! \", /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: \"1%\",\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 83\n    }\n  }, \"Up, Down, Left, Right\")), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      fontWeight: \"400\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, \"3. Press \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 56\n    }\n  }, \"Stop\"), \" to disengage\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"h6\", {\n    style: {\n      color: \"gray\",\n      fontWeight: \"200\",\n      fontSize: \"1.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, \"Control the canvas using speech recognition from TensorflowJS\")));\n};\n\nexport default Speech;","map":{"version":3,"sources":["/Users/wasif/Documents/GitHub/portfolio/src/components/Speech.jsx"],"names":["React","useEffect","useState","useRef","tf","speech","drawBall","Speech","model","setModel","action","setAction","labels","setLabels","canvasRef","x","setX","y","setY","r","setR","loadModel","recognizer","create","console","log","ensureModelLoaded","wordLabels","argMax","arr","map","i","reduce","a","pause","stopListening","recognizeCommand","listen","result","scores","Object","values","includeSpectrogram","probabilityThreshold","updateBall","current","width","height","ctx","getContext","textAlign","zIndex","position","color","backgroundColor","marginBottom","paddingTop","display","columnGap","alignItems","paddingLeft","paddingRight","paddingBottom","margin","padding","fontWeight","fontSize"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\n\nimport * as tf from \"@tensorflow/tfjs\";\n\nimport * as speech from \"@tensorflow-models/speech-commands\";\nimport \"./Speech.css\";\n\nimport { drawBall } from \"./utilities\";\n\nconst Speech = () => {\n  // model and action states\n  const [model, setModel] = useState(null);\n  const [action, setAction] = useState(null);\n  const [labels, setLabels] = useState(null);\n\n  // Canvas Ref and x,y coordinates and radius (r)\n  const canvasRef = useRef(null);\n  const [x, setX] = useState(700);\n  const [y, setY] = useState(400);\n  const [r, setR] = useState(30);\n\n  //  Recognizer\n  const loadModel = async () => {\n    const recognizer = await speech.create(\"BROWSER_FFT\");\n    console.log(\"Model loaded\");\n    await recognizer.ensureModelLoaded();\n    console.log(recognizer.wordLabels());\n    setModel(recognizer);\n    setLabels(recognizer.wordLabels());\n  };\n\n  useEffect(() => {\n    loadModel();\n  }, []);\n\n  function argMax(arr) {\n    return arr.map((x, i) => [x, i]).reduce((r, a) => (a[0] > r[0] ? a : r))[1];\n  }\n\n  const pause = async () => {\n    model.stopListening();\n    console.log(\"Stopped recording from inside pause\");\n  };\n\n  const recognizeCommand = async () => {\n    console.log(\"in\");\n    model.listen(\n      (result) => {\n        console.log(\"Started listening\");\n        console.log(result.scores);\n        setAction(labels[argMax(Object.values(result.scores))]);\n        console.log({ action });\n      },\n      {\n        includeSpectrogram: true,\n        probabilityThreshold: 0.9,\n      }\n    );\n  };\n\n  useEffect(() => {\n      const updateBall = action === \"up\" ? setY(y-60) : action === \"down\" ? setY(y+60) : action === \"right\" ? setX(x+60) : action === \"left\" ? setX(x-60) : \"\";\n      canvasRef.current.width = 1200;\n      canvasRef.current.height = 640;\n      const ctx = canvasRef.current.getContext(\"2d\");\n      console.log(x, y, r);\n      drawBall(ctx, x,y,r);\n      setAction('Speak to see some magic');\n  }, [action])\n \n\n\n  return (\n    <div style={{ textAlign: \"center\", zIndex: \"999\", position: \"relative\"}}>\n\n      <div style={{color: \"white\", backgroundColor: \"black\"}}>\n        <h1 style={{marginBottom: '0', paddingTop: '5%'}}>Control the ball with your Voice!</h1>\n      </div>\n      <canvas \n        ref={canvasRef}\n        style={{\n          textAlign: \"center\",\n          zIndex: \"9\",\n          width: \"100%\",\n          height: 720,\n          backgroundColor: \"black\",\n          marginBottom: 0\n        }}\n        />\n\n\n      <div style={{ display: \"flex\", columnGap: \"65%\", textAlign: \"center\", alignItems: \"center\", paddingLeft: \"25%\", paddingRight: \"25%\", paddingTop: \"5%\", paddingBottom: \"2%\", margin: 0, position: \"relative\", zIndex: \"200\"}}>\n        <button className=\"control\" onClick={recognizeCommand}>\n          Talk\n        </button>\n        <button className=\"control\" style={{backgroundColor:\"red\"}} onClick={pause}>\n          Stop\n        </button>\n        </div>\n        <div style={{textAlign: \"center\", padding: \"5%\", color: \"black\"}}>\n            <h2 style={{ marginBottom: \"3%\"}}>Instructions</h2>\n            <h3 style={{ fontWeight: \"400\", marginBottom: \"1%\"}}>1. Press <strong>Talk</strong></h3>\n            <h3 style={{ fontWeight: \"400\", marginBottom: \"1%\"}}>2. Make it move! <p style={{margin: \"1%\", color: \"red\"}}>Up, Down, Left, Right</p></h3>\n            \n            <h3 style={{ fontWeight: \"400\" }}>3. Press <strong>Stop</strong> to disengage</h3>\n            <br /><br />\n            <h6 style={{color: \"gray\", fontWeight: \"200\", fontSize: \"1.5rem\"}}>Control the canvas using speech recognition from TensorflowJS</h6>\n        </div>\n    </div>\n  );\n};\n\nexport default Speech;\n"]},"metadata":{},"sourceType":"module"}