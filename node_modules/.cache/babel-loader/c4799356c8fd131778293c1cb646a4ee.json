{"ast":null,"code":"var _jsxFileName = \"/Users/wasif/Documents/GitHub/portfolio/src/components/Weather.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { Row, Col, Card, Button } from \"react-bootstrap\";\n\nconst Weather = () => {\n  const [location, setLocation] = useState({\n    loaded: false,\n    coordinates: {\n      lat: \"\",\n      long: \"\"\n    }\n  });\n\n  const success = location => {\n    setLocation({\n      loaded: true,\n      coordinates: {\n        lat: location.coords.latitude,\n        long: location.coords.longitude\n      }\n    });\n  };\n\n  const failed = location => {\n    setLocation({\n      loaded: true,\n      error\n    });\n  };\n\n  useEffect(() => {\n    if (!(\"geolocation\" in navigator)) {\n      setLocation(state => ({ ...state,\n        loaded: true,\n        error: {\n          code: 0,\n          message: \"Geolocation not supported\"\n        }\n      }));\n    }\n\n    navigator.geolocation.getCurrentPosition(success, failed);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    s: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    style: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }, \"How's the weather?\"), /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, \"Hey Siri\"))))));\n};\n\nexport default Weather;","map":{"version":3,"sources":["/Users/wasif/Documents/GitHub/portfolio/src/components/Weather.jsx"],"names":["React","useEffect","useState","Row","Col","Card","Button","Weather","location","setLocation","loaded","coordinates","lat","long","success","coords","latitude","longitude","failed","error","navigator","state","code","message","geolocation","getCurrentPosition"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,MAAzB,QAAuC,iBAAvC;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC;AACvCQ,IAAAA,MAAM,EAAE,KAD+B;AAEvCC,IAAAA,WAAW,EAAE;AAAEC,MAAAA,GAAG,EAAE,EAAP;AAAWC,MAAAA,IAAI,EAAE;AAAjB;AAF0B,GAAD,CAAxC;;AAKA,QAAMC,OAAO,GAAIN,QAAD,IAAc;AAC5BC,IAAAA,WAAW,CAAC;AACVC,MAAAA,MAAM,EAAE,IADE;AAEVC,MAAAA,WAAW,EAAE;AACXC,QAAAA,GAAG,EAAEJ,QAAQ,CAACO,MAAT,CAAgBC,QADV;AAEXH,QAAAA,IAAI,EAAEL,QAAQ,CAACO,MAAT,CAAgBE;AAFX;AAFH,KAAD,CAAX;AAOD,GARD;;AASA,QAAMC,MAAM,GAAIV,QAAD,IAAc;AAC3BC,IAAAA,WAAW,CAAC;AACVC,MAAAA,MAAM,EAAE,IADE;AAEVS,MAAAA;AAFU,KAAD,CAAX;AAID,GALD;;AAOAlB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,EAAE,iBAAiBmB,SAAnB,CAAJ,EAAmC;AACjCX,MAAAA,WAAW,CAAEY,KAAD,KAAY,EACtB,GAAGA,KADmB;AAEtBX,QAAAA,MAAM,EAAE,IAFc;AAGtBS,QAAAA,KAAK,EAAE;AACLG,UAAAA,IAAI,EAAE,CADD;AAELC,UAAAA,OAAO,EAAE;AAFJ;AAHe,OAAZ,CAAD,CAAX;AAQD;;AAEDH,IAAAA,SAAS,CAACI,WAAV,CAAsBC,kBAAtB,CAAyCX,OAAzC,EAAkDI,MAAlD;AACD,GAbQ,EAaN,EAbM,CAAT;AAcA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,CAAC,EAAE,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,CADF,CADF,CADF,CADF,CADF;AAeD,CAnDD;;AAqDA,eAAeX,OAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Row, Col, Card, Button } from \"react-bootstrap\";\n\nconst Weather = () => {\n  const [location, setLocation] = useState({\n    loaded: false,\n    coordinates: { lat: \"\", long: \"\" },\n  });\n\n  const success = (location) => {\n    setLocation({\n      loaded: true,\n      coordinates: {\n        lat: location.coords.latitude,\n        long: location.coords.longitude,\n      },\n    });\n  };\n  const failed = (location) => {\n    setLocation({\n      loaded: true,\n      error\n    });\n  };\n\n  useEffect(() => {\n    if (!(\"geolocation\" in navigator)) {\n      setLocation((state) => ({\n        ...state,\n        loaded: true,\n        error: {\n          code: 0,\n          message: \"Geolocation not supported\",\n        },\n      }));\n    }\n\n    navigator.geolocation.getCurrentPosition(success, failed);\n  }, []);\n  return (\n    <div>\n      <Row s={1}>\n        <Col>\n          <Card style={{}}>\n            <Card.Body>\n              <Card.Title>How's the weather?</Card.Title>\n              <Card.Text></Card.Text>\n              <Button variant=\"secondary\">Hey Siri</Button>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default Weather;\n"]},"metadata":{},"sourceType":"module"}