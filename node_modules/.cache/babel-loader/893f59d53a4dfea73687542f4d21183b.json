{"ast":null,"code":"var _jsxFileName = \"/Users/wasif/Documents/GitHub/portfolio/src/components/Playground/Todolist/Todo.jsx\";\nimport React from \"react\";\nimport { Button, FormCheck, Stack } from \"react-bootstrap\";\n\nconst Todo = _ref => {\n  let {\n    text,\n    todo,\n    setTodo,\n    todoItem\n  } = _ref;\n\n  const deleteHandler = e => {\n    console.log(e.target);\n    setTodo(todo.filter(element => element.id !== todoItem.id));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Stack, {\n    gap: 3,\n    direction: \"horizontal\",\n    style: {\n      margin: \"6%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"me-auto\",\n    style: {\n      fontWeight: \"300\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, text), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormCheck, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"danger\",\n    onClick: deleteHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, \"Delete\")));\n};\n\nexport default Todo;","map":{"version":3,"sources":["/Users/wasif/Documents/GitHub/portfolio/src/components/Playground/Todolist/Todo.jsx"],"names":["React","Button","FormCheck","Stack","Todo","text","todo","setTodo","todoItem","deleteHandler","e","console","log","target","filter","element","id","margin","fontWeight"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,KAA5B,QAAyC,iBAAzC;;AAEA,MAAMC,IAAI,GAAG,QAAuC;AAAA,MAAtC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,IAAR;AAAcC,IAAAA,OAAd;AAAuBC,IAAAA;AAAvB,GAAsC;;AAChD,QAAMC,aAAa,GAAIC,CAAD,IAAO;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAd;AACAN,IAAAA,OAAO,CAACD,IAAI,CAACQ,MAAL,CAAaC,OAAD,IAAaA,OAAO,CAACC,EAAR,KAAeR,QAAQ,CAACQ,EAAjD,CAAD,CAAP;AACH,GAHD;;AAIF,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAE,CAAZ;AAAe,IAAA,SAAS,EAAC,YAAzB;AAAsC,IAAA,KAAK,EAAE;AAACC,MAAAA,MAAM,EAAE;AAAT,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,SAAd;AAAwB,IAAA,KAAK,EAAE;AAACC,MAAAA,UAAU,EAAE;AAAb,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqDb,IAArD,CADF,eAEE;AAAK,IAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE;AAAK,IAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAKE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,QAAhB;AAAyB,IAAA,OAAO,EAAEI,aAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,CADF,CADF;AAWD,CAhBD;;AAkBA,eAAeL,IAAf","sourcesContent":["import React from \"react\";\nimport { Button, FormCheck, Stack } from \"react-bootstrap\";\n\nconst Todo = ({ text, todo, setTodo, todoItem }) => {\n    const deleteHandler = (e) => {\n        console.log(e.target);\n        setTodo(todo.filter((element) => element.id !== todoItem.id));\n    };\n  return (\n    <div>\n      <Stack gap={3} direction=\"horizontal\" style={{margin: \"6%\"}}>\n        <h5 className=\"me-auto\" style={{fontWeight: \"300\"}}>{text}</h5>\n        <div className=\"vr\" />\n        <FormCheck />\n        <div className=\"vr\" />\n        <Button variant=\"danger\" onClick={deleteHandler}>Delete</Button>\n      </Stack>\n    </div>\n  );\n};\n\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}