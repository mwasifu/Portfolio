{"ast":null,"code":"var _jsxFileName = \"/Users/wasif/Documents/GitHub/portfolio/src/components/Weather.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { Row, Col, Card, Button, Container } from \"react-bootstrap\";\nimport axios from \"axios\";\n\nconst Weather = () => {\n  const apiKey = \"86ddf68890ff862711c0fc76d79c9b6e\";\n  let id;\n  const [city, setCity] = useState(\"\");\n  const [temperature, setTemperature] = useState(\"\");\n  const [high, setHigh] = useState(\"\");\n  const [low, setLow] = useState(\"\");\n  const [feel, setFeel] = useState(\"\");\n  const [wind, setWind] = useState(\"\");\n  const [condition, setCondition] = useState(\"\");\n  const [icon, setIcon] = useState(\"\");\n  const [location, setLocation] = useState({\n    coordinates: {\n      lat: \"\",\n      lng: \"\"\n    }\n  });\n\n  const success = location => {\n    // setLocation({\n    //     loaded: true,\n    //     lat: location.coords.latitude, lng: location.coords.longitude})\n    console.log(location);\n    axios({\n      method: \"GET\",\n      url: `https://api.openweathermap.org/data/2.5/weather/?lat=${location.coords.latitude}&lon=${location.coords.longitude}&units=imperial&appid=${apiKey}`\n    }).then(response => {\n      const cityX = response.data.name;\n      setCity(cityX);\n      const iconX = response.data.weather[0].icon;\n      setIcon(iconX);\n      document.getElementById(\"weatherIcon\").src = \"https://openweathermap.org/img/wn/\" + iconX + \"@2x.png\";\n      const tempX = response.data.main.temp;\n      setTemperature(tempX + \" F\");\n      const conditionX = response.data.weather[0].main;\n      setCondition(conditionX);\n      const highX = response.data.main.temp_max;\n      setHigh(\"High: \" + highX + \" F\");\n      const lowX = response.data.main.temp_min;\n      setLow(\"Low: \" + lowX + \" F\");\n      const feelX = response.data.main.feels_like;\n      setFeel(\"Real Feel: \" + feelX + \" F\");\n      const windX = response.data.wind.speed;\n      setWind(\"Wind Speed: \" + windX + \" mph\");\n      console.log(response.data);\n      navigator.geolocation.clearWatch(id);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  useEffect(() => {\n    console.log(\"from \" + city);\n  }, [city]);\n\n  const failed = error => {\n    setLocation({\n      loaded: true,\n      error\n    });\n    console.log(\"reached failure\");\n  };\n\n  useEffect(() => {\n    if (!(\"geolocation\" in navigator)) {\n      failed({\n        code: 0,\n        message: \"Geolocation not supported\"\n      });\n    }\n  }, []); //\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    bg: \"dark\",\n    text: \"white\",\n    border: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    style: {\n      padding: \"3%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    style: {\n      margin: \"auto\",\n      textAlign: \"left\",\n      fontSize: \"2rem\",\n      fontWeight: \"200\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 19\n    }\n  }, \"How's the weather?\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    style: {\n      margin: \"auto\",\n      width: \"30%\",\n      justifyContent: \"center\",\n      marginTop: \"5%\"\n    },\n    onClick: () => {\n      id = navigator.geolocation.getCurrentPosition(success, failed);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 19\n    }\n  }, \"Check\")), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    style: {\n      marginTop: \"8%\",\n      fontSize: \"2.3rem\",\n      fontWeight: \"300\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 19\n    }\n  }, city)), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    style: {\n      paddingLeft: \"7%\",\n      margin: \"auto\",\n      marginBottom: \"5%\",\n      fontSize: \"2rem\",\n      fontWeight: \"200\",\n      textAlign: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 19\n    }\n  }, temperature), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingRight: \"5%\",\n      margin: \"auto\",\n      fontSize: \"2rem\",\n      fontWeight: \"200\",\n      textAlign: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    id: \"weatherIcon\",\n    src: \"\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    sm: 2,\n    md: 2,\n    lg: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    style: {\n      paddingLeft: \"11%\",\n      margin: \"auto\",\n      marginBottom: \"10%\",\n      fontSize: \"2rem\",\n      fontWeight: \"200\",\n      textAlign: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 21\n    }\n  }, high), /*#__PURE__*/React.createElement(Card.Title, {\n    style: {\n      paddingLeft: \"11%\",\n      margin: \"auto\",\n      marginBottom: \"10%\",\n      fontSize: \"2rem\",\n      fontWeight: \"200\",\n      textAlign: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 21\n    }\n  }, low), /*#__PURE__*/React.createElement(Card.Title, {\n    style: {\n      paddingLeft: \"11%\",\n      margin: \"auto\",\n      marginBottom: \"10%\",\n      fontSize: \"2rem\",\n      fontWeight: \"200\",\n      textAlign: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 21\n    }\n  }, feel)), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    style: {\n      paddingRight: \"11%\",\n      margin: \"auto\",\n      marginBottom: \"10%\",\n      fontSize: \"2rem\",\n      fontWeight: \"200\",\n      textAlign: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 21\n    }\n  }, condition), /*#__PURE__*/React.createElement(Card.Title, {\n    style: {\n      paddingRight: \"11%\",\n      margin: \"auto\",\n      marginBottom: \"10%\",\n      fontSize: \"2rem\",\n      fontWeight: \"200\",\n      textAlign: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 21\n    }\n  }, wind))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card.Text, {\n    style: {\n      textAlign: \"right\",\n      fontSize: \"0.5rem\",\n      fontWeight: \"100\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 19\n    }\n  }, \"Powered by OpenWeather\"))))))));\n};\n\nexport default Weather;","map":{"version":3,"sources":["/Users/wasif/Documents/GitHub/portfolio/src/components/Weather.jsx"],"names":["React","useEffect","useState","Row","Col","Card","Button","Container","axios","Weather","apiKey","id","city","setCity","temperature","setTemperature","high","setHigh","low","setLow","feel","setFeel","wind","setWind","condition","setCondition","icon","setIcon","location","setLocation","coordinates","lat","lng","success","console","log","method","url","coords","latitude","longitude","then","response","cityX","data","name","iconX","weather","document","getElementById","src","tempX","main","temp","conditionX","highX","temp_max","lowX","temp_min","feelX","feels_like","windX","speed","navigator","geolocation","clearWatch","catch","error","failed","loaded","code","message","padding","margin","textAlign","fontSize","fontWeight","width","justifyContent","marginTop","getCurrentPosition","paddingLeft","marginBottom","paddingRight"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Row, Col, Card, Button, Container } from \"react-bootstrap\";\nimport axios from \"axios\";\nconst Weather = () => {\n  const apiKey = \"86ddf68890ff862711c0fc76d79c9b6e\";\n  let id;\n  const [city, setCity] = useState(\"\");\n  const [temperature, setTemperature] = useState(\"\");\n  const [high, setHigh] = useState(\"\");\n  const [low, setLow] = useState(\"\");\n  const [feel, setFeel] = useState(\"\");\n  const [wind, setWind] = useState(\"\");\n  const [condition, setCondition] = useState(\"\");\n  const [icon, setIcon] = useState(\"\");\n  const [location, setLocation] = useState({\n    coordinates: { lat: \"\", lng: \"\" },\n  });\n\n  const success = (location) => {\n    // setLocation({\n    //     loaded: true,\n    //     lat: location.coords.latitude, lng: location.coords.longitude})\n    console.log(location);\n    axios({\n      method: \"GET\",\n      url: `https://api.openweathermap.org/data/2.5/weather/?lat=${location.coords.latitude}&lon=${location.coords.longitude}&units=imperial&appid=${apiKey}`,\n    })\n      .then((response) => {\n        const cityX = response.data.name;\n        setCity(cityX);\n        const iconX = response.data.weather[0].icon;\n        setIcon(iconX);\n        document.getElementById(\"weatherIcon\").src =\n          \"https://openweathermap.org/img/wn/\" + iconX + \"@2x.png\";\n        const tempX = response.data.main.temp;\n        setTemperature(tempX + \" F\");\n        const conditionX = response.data.weather[0].main;\n        setCondition(conditionX);\n        const highX = response.data.main.temp_max;\n        setHigh(\"High: \" + highX + \" F\");\n        const lowX = response.data.main.temp_min;\n        setLow(\"Low: \" + lowX + \" F\");\n        const feelX = response.data.main.feels_like;\n        setFeel(\"Real Feel: \" + feelX + \" F\");\n        const windX = response.data.wind.speed;\n        setWind(\"Wind Speed: \" + windX + \" mph\");\n        console.log(response.data);\n        navigator.geolocation.clearWatch(id);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  useEffect(() => {\n    console.log(\"from \" + city);\n  }, [city]);\n\n  const failed = (error) => {\n    setLocation({\n      loaded: true,\n      error,\n    });\n    console.log(\"reached failure\");\n  };\n\n  useEffect(() => {\n    if (!(\"geolocation\" in navigator)) {\n      failed({\n        code: 0,\n        message: \"Geolocation not supported\",\n      });\n    }\n  }, []);\n\n  //\n\n  return (\n    <div>\n      <Row>\n        <Col>\n          <Card bg=\"dark\" text=\"white\" border=\"light\">\n            <Card.Body>\n              <Col className=\"\">\n                <Row style={{ padding: \"3%\" }}>\n                  <Card.Title\n                    style={{\n                      margin: \"auto\",\n                      textAlign: \"left\",\n                      fontSize: \"2rem\",\n                      fontWeight: \"200\",\n                    }}\n                  >\n                    How's the weather?\n                  </Card.Title>\n                  <Button\n                    variant=\"secondary\"\n                    style={{\n                      margin: \"auto\",\n                      width: \"30%\",\n                      justifyContent: \"center\",\n                      marginTop: \"5%\",\n                    }}\n                    onClick={() => {\n                      id = navigator.geolocation.getCurrentPosition(\n                        success,\n                        failed\n                      );\n                    }}\n                  >\n                    Check\n                  </Button>\n                </Row>\n                <Row>\n                  <Card.Title\n                    style={{\n                      marginTop: \"8%\",\n                      fontSize: \"2.3rem\",\n                      fontWeight: \"300\",\n                    }}\n                  >\n                    {city}\n                  </Card.Title>\n                </Row>\n\n                <Row>\n                  <Card.Title\n                    style={{\n                      paddingLeft: \"7%\",\n                      margin: \"auto\",\n                      marginBottom: \"5%\",\n                      fontSize: \"2rem\",\n                      fontWeight: \"200\",\n                      textAlign: \"left\",\n                    }}\n                  >\n                    {temperature}\n                  </Card.Title>\n                  <div\n                    style={{\n                      paddingRight: \"5%\",\n                      margin: \"auto\",\n                      fontSize: \"2rem\",\n                      fontWeight: \"200\",\n                      textAlign: \"right\",\n                    }}\n                  >\n                    <img id=\"weatherIcon\" src=\"\" alt=\"\" />\n                  </div>\n                </Row>\n                <Row sm={2} md={2} lg={2}>\n                  <Col>\n                    <Card.Title\n                      style={{\n                        paddingLeft: \"11%\",\n                        margin: \"auto\",\n                        marginBottom: \"10%\",\n                        fontSize: \"2rem\",\n                        fontWeight: \"200\",\n                        textAlign: \"left\",\n                      }}\n                    >\n                      {high}\n                    </Card.Title>\n                    <Card.Title\n                      style={{\n                        paddingLeft: \"11%\",\n                        margin: \"auto\",\n                        marginBottom: \"10%\",\n                        fontSize: \"2rem\",\n                        fontWeight: \"200\",\n                        textAlign: \"left\",\n                      }}\n                    >\n                      {low}\n                    </Card.Title>\n                    <Card.Title\n                      style={{\n                        paddingLeft: \"11%\",\n                        margin: \"auto\",\n                        marginBottom: \"10%\",\n                        fontSize: \"2rem\",\n                        fontWeight: \"200\",\n                        textAlign: \"left\",\n                      }}\n                    >\n                      {feel}\n                    </Card.Title>\n                  </Col>\n\n                  <Col>\n                    <Card.Title\n                      style={{\n                        paddingRight: \"11%\",\n                        margin: \"auto\",\n                        marginBottom: \"10%\",\n                        fontSize: \"2rem\",\n                        fontWeight: \"200\",\n                        textAlign: \"right\",\n                      }}\n                    >\n                      {condition}\n                    </Card.Title>\n\n                    <Card.Title\n                      style={{\n                        paddingRight: \"11%\",\n                        margin: \"auto\",\n                        marginBottom: \"10%\",\n                        fontSize: \"2rem\",\n                        fontWeight: \"200\",\n                        textAlign: \"right\",\n                      }}\n                    >\n                      {wind}\n                    </Card.Title>\n                  </Col>\n                </Row>\n\n                <div>\n                  <Card.Text\n                    style={{\n                      textAlign: \"right\",\n                      fontSize: \"0.5rem\",\n                      fontWeight: \"100\",\n                    }}\n                  >\n                    Powered by OpenWeather\n                  </Card.Text>\n                </div>\n              </Col>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default Weather;\n"]},"metadata":{},"sourceType":"module"}