{"ast":null,"code":"var _jsxFileName = \"/Users/wasif/Documents/GitHub/portfolio/src/components/Speech.jsx\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as speech from \"@tensorflow-models/speech-commands\";\nimport \"./Speech.css\";\nimport { drawBall } from \"./utils/utilities\";\nimport { Col, Row } from \"react-bootstrap\";\n\nconst Speech = () => {\n  // model and action states\n  const [model, setModel] = useState(null);\n  const [action, setAction] = useState(null);\n  const [labels, setLabels] = useState(null);\n  const [listening, setListening] = useState(\"\"); // Canvas Ref and x,y coordinates and radius (r)\n\n  const canvasRef = useRef(null);\n  const [x, setX] = useState(700);\n  const [y, setY] = useState(200);\n  const [r, setR] = useState(20); //  Recognizer\n\n  const loadModel = async () => {\n    const recognizer = await speech.create(\"BROWSER_FFT\");\n    console.log(\"Model loaded\");\n    await recognizer.ensureModelLoaded();\n    console.log(recognizer.wordLabels());\n    setModel(recognizer);\n    setLabels(recognizer.wordLabels());\n  };\n\n  useEffect(() => {\n    loadModel();\n  }, []);\n\n  function argMax(arr) {\n    return arr.map((x, i) => [x, i]).reduce((r, a) => a[0] > r[0] ? a : r)[1];\n  }\n\n  const pause = async () => {\n    model.stopListening();\n    setListening(\"\");\n    console.log(\"Stopped recording from inside pause\");\n  };\n\n  const recognizeCommand = async () => {\n    console.log(\"in\");\n    setListening(\"Listening\");\n    model.listen(result => {\n      console.log(\"Started listening\");\n      console.log(result.scores);\n      setAction(labels[argMax(Object.values(result.scores))]);\n      console.log({\n        action\n      });\n    }, {\n      includeSpectrogram: true,\n      probabilityThreshold: 0.9\n    });\n  };\n\n  useEffect(() => {\n    const updateBall = action === \"up\" ? setY(y - 60) : action === \"down\" ? setY(y + 60) : action === \"right\" ? setX(x + 60) : action === \"left\" ? setX(x - 60) : \"\";\n    canvasRef.current.width = 1200;\n    canvasRef.current.height = 400;\n    const ctx = canvasRef.current.getContext(\"2d\");\n    console.log(x, y, r);\n    drawBall(ctx, x, y, r);\n    setAction(\"Speak to see some magic\");\n  }, [action]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\",\n      zIndex: \"999\",\n      position: \"relative\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: \"white\",\n      backgroundColor: \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      marginBottom: \"0\",\n      paddingTop: \"5%\",\n      fontWeight: \"300\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, \"Control the ball with your Voice!\"), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      marginBottom: \"0\",\n      paddingTop: \"2%\",\n      fontWeight: \"300\",\n      color: \"crimson\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, listening)), /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: canvasRef,\n    style: {\n      textAlign: \"center\",\n      zIndex: \"9\",\n      width: \"100%\",\n      height: 300,\n      backgroundColor: \"black\",\n      marginBottom: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    style: {\n      marginTop: \"2%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    style: {\n      textAlign: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"control\",\n    onClick: recognizeCommand,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, \"Talk\")), /*#__PURE__*/React.createElement(Col, {\n    style: {\n      textAlign: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"control\",\n    style: {\n      backgroundColor: \"red\"\n    },\n    onClick: pause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, \"Stop\"))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\",\n      padding: \"5%\",\n      color: \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      marginBottom: \"3%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, \"Instructions\"), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      fontWeight: \"400\",\n      marginBottom: \"1%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, \"1. Press \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 20\n    }\n  }, \"Talk\")), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      fontWeight: \"400\",\n      marginBottom: \"1%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, \"2. Make it move!\", \" \", /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: \"1%\",\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, \"Up, Down, Left, Right\")), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      fontWeight: \"400\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, \"3. Press \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 20\n    }\n  }, \"Stop\"), \" to disengage\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h6\", {\n    style: {\n      color: \"gray\",\n      fontWeight: \"200\",\n      fontSize: \"1.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, \"Control the canvas using speech recognition from TensorflowJS\")));\n};\n\nexport default Speech;","map":{"version":3,"sources":["/Users/wasif/Documents/GitHub/portfolio/src/components/Speech.jsx"],"names":["React","useEffect","useState","useRef","tf","speech","drawBall","Col","Row","Speech","model","setModel","action","setAction","labels","setLabels","listening","setListening","canvasRef","x","setX","y","setY","r","setR","loadModel","recognizer","create","console","log","ensureModelLoaded","wordLabels","argMax","arr","map","i","reduce","a","pause","stopListening","recognizeCommand","listen","result","scores","Object","values","includeSpectrogram","probabilityThreshold","updateBall","current","width","height","ctx","getContext","textAlign","zIndex","position","color","backgroundColor","marginBottom","paddingTop","fontWeight","marginTop","padding","margin","fontSize"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\n\nimport * as tf from \"@tensorflow/tfjs\";\n\nimport * as speech from \"@tensorflow-models/speech-commands\";\nimport \"./Speech.css\";\n\nimport { drawBall } from \"./utils/utilities\";\nimport { Col, Row } from \"react-bootstrap\";\n\nconst Speech = () => {\n  // model and action states\n  const [model, setModel] = useState(null);\n  const [action, setAction] = useState(null);\n  const [labels, setLabels] = useState(null);\n  const [listening, setListening] = useState(\"\");\n\n  // Canvas Ref and x,y coordinates and radius (r)\n  const canvasRef = useRef(null);\n  const [x, setX] = useState(700);\n  const [y, setY] = useState(200);\n  const [r, setR] = useState(20);\n\n  //  Recognizer\n  const loadModel = async () => {\n    const recognizer = await speech.create(\"BROWSER_FFT\");\n    console.log(\"Model loaded\");\n    await recognizer.ensureModelLoaded();\n    console.log(recognizer.wordLabels());\n    setModel(recognizer);\n    setLabels(recognizer.wordLabels());\n  };\n\n  useEffect(() => {\n    loadModel();\n  }, []);\n\n  function argMax(arr) {\n    return arr.map((x, i) => [x, i]).reduce((r, a) => (a[0] > r[0] ? a : r))[1];\n  }\n\n  const pause = async () => {\n    model.stopListening();\n    setListening(\"\");\n    console.log(\"Stopped recording from inside pause\");\n  };\n\n  const recognizeCommand = async () => {\n    console.log(\"in\");\n    setListening(\"Listening\");\n    model.listen(\n      (result) => {\n        console.log(\"Started listening\");\n        console.log(result.scores);\n        setAction(labels[argMax(Object.values(result.scores))]);\n        console.log({ action });\n      },\n      {\n        includeSpectrogram: true,\n        probabilityThreshold: 0.9,\n      }\n    );\n  };\n\n  useEffect(() => {\n    const updateBall =\n      action === \"up\"\n        ? setY(y - 60)\n        : action === \"down\"\n        ? setY(y + 60)\n        : action === \"right\"\n        ? setX(x + 60)\n        : action === \"left\"\n        ? setX(x - 60)\n        : \"\";\n    canvasRef.current.width = 1200;\n    canvasRef.current.height = 400;\n    const ctx = canvasRef.current.getContext(\"2d\");\n    console.log(x, y, r);\n    drawBall(ctx, x, y, r);\n    setAction(\"Speak to see some magic\");\n  }, [action]);\n\n  return (\n    <div style={{ textAlign: \"center\", zIndex: \"999\", position: \"relative\" }}>\n      <div style={{ color: \"white\", backgroundColor: \"black\" }}>\n        <h1 style={{ marginBottom: \"0\", paddingTop: \"5%\", fontWeight: \"300\" }}>\n          Control the ball with your Voice!\n        </h1>\n        <h3 style={{ marginBottom: \"0\", paddingTop: \"2%\", fontWeight: \"300\", color: \"crimson\" }}>\n          {listening}\n        </h3>\n      </div>\n      <canvas\n        ref={canvasRef}\n        style={{\n          textAlign: \"center\",\n          zIndex: \"9\",\n          width: \"100%\",\n          height: 300,\n          backgroundColor: \"black\",\n          marginBottom: 0,\n        }}\n      />\n \n      <Row style={{ marginTop: \"2%\"}}>\n        <Col style={{textAlign: \"right\"}}>\n          <button className=\"control\" onClick={recognizeCommand} >\n            Talk\n          </button>\n        </Col>\n        <Col style={{textAlign: \"left\"}}>\n          <button\n            className=\"control\"\n            style={{ backgroundColor: \"red\" }}\n            onClick={pause}\n          >\n            Stop\n          </button>\n        </Col>\n      </Row>\n\n      <div style={{ textAlign: \"center\", padding: \"5%\", color: \"black\" }}>\n        <h2 style={{ marginBottom: \"3%\" }}>Instructions</h2>\n        <h3 style={{ fontWeight: \"400\", marginBottom: \"1%\" }}>\n          1. Press <strong>Talk</strong>\n        </h3>\n        <h3 style={{ fontWeight: \"400\", marginBottom: \"1%\" }}>\n          2. Make it move!{\" \"}\n          <p style={{ margin: \"1%\", color: \"red\" }}>Up, Down, Left, Right</p>\n        </h3>\n\n        <h3 style={{ fontWeight: \"400\" }}>\n          3. Press <strong>Stop</strong> to disengage\n        </h3>\n        <br />\n        <br />\n        <h6 style={{ color: \"gray\", fontWeight: \"200\", fontSize: \"1.5rem\" }}>\n          Control the canvas using speech recognition from TensorflowJS\n        </h6>\n      </div>\n    </div>\n  );\n};\n\nexport default Speech;\n"]},"metadata":{},"sourceType":"module"}